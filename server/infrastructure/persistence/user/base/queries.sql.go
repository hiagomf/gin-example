// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0
// source: queries.sql

package base

import (
	"context"
	"time"

	"github.com/google/uuid"
)

const insert = `-- name: Insert :one
INSERT INTO "user".t_user("name", age, document) 
VALUES ($1, $2, $3)
RETURNING "id", "created_at", "name", "age", "document"
`

type InsertParams struct {
	Name     string
	Age      int32
	Document string
}

type InsertRow struct {
	ID        uuid.UUID
	CreatedAt time.Time
	Name      string
	Age       int32
	Document  string
}

func (q *Queries) Insert(ctx context.Context, arg *InsertParams) (*InsertRow, error) {
	row := q.db.QueryRowContext(ctx, insert, arg.Name, arg.Age, arg.Document)
	var i InsertRow
	err := row.Scan(
		&i.ID,
		&i.CreatedAt,
		&i.Name,
		&i.Age,
		&i.Document,
	)
	return &i, err
}
